# This workflow will build a Java project with Maven
# This runs only when a PR is merged, to create or update the cache
# This is useful because the builds on Windows and MacOS are triggered
# only on PR, so, for new branches, the cache is always empty, since
# the builds on PR will not update the cache on the master branch.
# This workflow will update the cache for Windows and MacOS on the master branch
# when the PR is merged (actually it will update on the base branch of a merged PR).
# The build consists in a Maven run but skipping tests.
# The Maven build is run only if we did not have a cache hit.

name: Updates Cache on Windows and MacOS

on:
  push:
    # Sequence of patterns matched against refs/heads
    pull_request:
    branches:
      - main
    types: [ closed ]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      id: setup-java
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: 8
    - name: Cache Maven packages
      uses: actions/cache@v3
      id: m2cache # note the cache id, see below for cache-hit
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      if: steps.m2cache.outputs.cache-hit != 'true' # note the use of the id 'm2cache'
      run: mvn -f io.github.lorenzobettini.example/pom.xml verify -DskipTests
